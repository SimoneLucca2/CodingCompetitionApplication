
participant "Client" as Client
participant "API Gateway" as APIGateway
participant "Tournament Service" as TS
participant "Tournament Data Tier" as TournamentDataTier
participant "Message Broker" as MB
participant "Battle Service" as BattleService

Client->APIGateway:PUT \n/v1/tournament/status\nbody: closing
activate APIGateway

APIGateway->TS:PUT \n/tournament/status\nbody: closing
activate TS


TS->TournamentDataTier:PUT \n/tournament/status\nbody: closing
activate TournamentDataTier

TournamentDataTier-->TS:200 Ok
deactivate TournamentDataTier

TS->MB:Publish \ntournament.lifecycle.closing \nevent

TS-->APIGateway:200 Ok
deactivate TS

note over MB:Stores the event
APIGateway-->Client:200 Ok
deactivate APIGateway



MB->BattleService:Consume \ntournament.lifecycle.closing \nMessage

note over BattleService:Eventually, \nwhen the last battle ends
BattleService->MB:Publish \ntournament.lifecycle.closed \nevent

note over MB:Stores the event


TS<-MB:Consume \ntournament.lifecycle.closed \nmessage
TS->TournamentDataTier:PUT \n/tournament/status\nbody: closed
activate TournamentDataTier
TournamentDataTier-->TS:Ok
deactivate TournamentDataTier

