{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AleFerro\\\\Desktop\\\\FeraboliFilippiniLucca\\\\Implementation\\\\ckbfrontend\\\\src\\\\Components\\\\BattleStudentmysection\\\\BattleCardStudentmysection.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './BattleCardStudentmysection.css';\nimport API_URL from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BattleCardStudentmysection({\n  battle\n}) {\n  _s();\n  const navigate = useNavigate();\n  const oggettoSalvato = JSON.parse(sessionStorage.getItem('utente'));\n  const userId = oggettoSalvato.userId;\n  async function joinBattle(e) {\n    e.stopPropagation(); // Impedisce al click sul bottone di attivare il click sulla card\n\n    // Preparazione del corpo della richiesta\n    const requestBody = {\n      studentId: userId,\n      battleId: battle.battleId // Assumendo che ogni battaglia abbia un campo 'id'\n    };\n    console.log(requestBody);\n    try {\n      const response = await fetch(`${API_URL}/battle/student`, {\n        // Sostituisci '/api/joinbattle' con il tuo endpoint specifico\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n        navigate(`/errorpage`);\n      }\n\n      // Gestisci qui la risposta in caso di successo\n      console.log(\"Joined battle successfully\");\n      navigate(`/joinbattle`);\n    } catch (error) {\n      console.error(\"Error joining battle:\", error);\n      // Gestisci qui l'errore (ad es., mostrando un messaggio all'utente)\n    }\n  }\n  async function quitBattle(e) {\n    e.stopPropagation(); // Impedisce al click sul bottone di attivare il click sulla card\n\n    // Preparazione del corpo della richiesta\n    const requestBody = {\n      studentId: userId,\n      battleId: battle.battleId // Assumendo che ogni battaglia abbia un campo 'id'\n    };\n    console.log(requestBody);\n    try {\n      const response = await fetch(`${API_URL}/battle/student`, {\n        // Sostituisci '/api/joinbattle' con il tuo endpoint specifico\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n        navigate(`/errorpage`);\n      }\n\n      // Gestisci qui la risposta in caso di successo\n      console.log(\"Quitted battle successfully\");\n      navigate(`/quitbattle`);\n    } catch (error) {\n      console.error(\"Error Quitting battle:\", error);\n      // Gestisci qui l'errore (ad es., mostrando un messaggio all'utente)\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"battle-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: battle.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Dettagli: \", battle.details]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"join-button\",\n      onClick: joinBattle,\n      children: \"Join the Battle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"join-button\",\n      onClick: quitBattle,\n      children: \"Quit the Battle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(BattleCardStudentmysection, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = BattleCardStudentmysection;\nexport default BattleCardStudentmysection;\nvar _c;\n$RefreshReg$(_c, \"BattleCardStudentmysection\");","map":{"version":3,"names":["React","useNavigate","API_URL","jsxDEV","_jsxDEV","BattleCardStudentmysection","battle","_s","navigate","oggettoSalvato","JSON","parse","sessionStorage","getItem","userId","joinBattle","e","stopPropagation","requestBody","studentId","battleId","console","log","response","fetch","method","headers","body","stringify","ok","Error","status","error","quitBattle","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","details","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AleFerro/Desktop/FeraboliFilippiniLucca/Implementation/ckbfrontend/src/Components/BattleStudentmysection/BattleCardStudentmysection.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './BattleCardStudentmysection.css';\r\nimport API_URL from \"../../config\";\r\n\r\nfunction BattleCardStudentmysection({ battle}) {\r\n    const navigate = useNavigate();\r\n\r\n    const oggettoSalvato = JSON.parse(sessionStorage.getItem('utente'));\r\n    const userId = oggettoSalvato.userId;\r\n\r\n    async function joinBattle(e) {\r\n        e.stopPropagation(); // Impedisce al click sul bottone di attivare il click sulla card\r\n\r\n        // Preparazione del corpo della richiesta\r\n        const requestBody = {\r\n            studentId: userId,\r\n            battleId: battle.battleId // Assumendo che ogni battaglia abbia un campo 'id'\r\n        };\r\n        console.log(requestBody);\r\n\r\n        try {\r\n            const response = await fetch(`${API_URL}/battle/student`, { // Sostituisci '/api/joinbattle' con il tuo endpoint specifico\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(requestBody)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n                navigate(`/errorpage`);\r\n            }\r\n\r\n            // Gestisci qui la risposta in caso di successo\r\n            console.log(\"Joined battle successfully\");\r\n            navigate(`/joinbattle`);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error joining battle:\", error);\r\n            // Gestisci qui l'errore (ad es., mostrando un messaggio all'utente)\r\n        }\r\n    }\r\n\r\n    async function quitBattle(e) {\r\n        e.stopPropagation(); // Impedisce al click sul bottone di attivare il click sulla card\r\n\r\n        // Preparazione del corpo della richiesta\r\n        const requestBody = {\r\n            studentId: userId,\r\n            battleId: battle.battleId // Assumendo che ogni battaglia abbia un campo 'id'\r\n        };\r\n        console.log(requestBody);\r\n\r\n        try {\r\n            const response = await fetch(`${API_URL}/battle/student`, { // Sostituisci '/api/joinbattle' con il tuo endpoint specifico\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(requestBody)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n                navigate(`/errorpage`);\r\n            }\r\n\r\n            // Gestisci qui la risposta in caso di successo\r\n            console.log(\"Quitted battle successfully\");\r\n            navigate(`/quitbattle`);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error Quitting battle:\", error);\r\n            // Gestisci qui l'errore (ad es., mostrando un messaggio all'utente)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"battle-card\">\r\n            <h3>{battle.name}</h3>\r\n            <p>Dettagli: {battle.details}</p>\r\n            <button className=\"join-button\" onClick={joinBattle}>Join the Battle</button>\r\n            <button className=\"join-button\" onClick={quitBattle}>Quit the Battle</button>\r\n\r\n            {/* Altri dettagli della battaglia possono essere aggiunti qui */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BattleCardStudentmysection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}