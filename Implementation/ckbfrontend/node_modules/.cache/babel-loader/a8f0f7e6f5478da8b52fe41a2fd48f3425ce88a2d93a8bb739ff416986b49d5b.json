{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AleFerro\\\\Desktop\\\\FeraboliFilippiniLucca\\\\Implementation\\\\ckbfrontend\\\\src\\\\Components\\\\CreateTournament\\\\createtournament.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './createtournament.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTournament = () => {\n  _s();\n  const [name, setname] = useState('');\n  const [description, setDescription] = useState('');\n  const [registrationDeadline, setregistrationDeadline] = useState('');\n  const oggettoSalvato = JSON.parse(sessionStorage.getItem('utente'));\n  const creatorId = oggettoSalvato.userId;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userId = \"User's ID\"; // Fetch or set the user ID here\n    const tournamentData = {\n      name,\n      creatorId,\n      description,\n      registrationDeadline\n    };\n\n    // Send tournamentData to the backend\n    // Example: await fetch('your-backend-endpoint', { method: 'POST', body: JSON.stringify(tournamentData), headers: { 'Content-Type': 'application/json' } });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-tournament\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tournament Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setname(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Submission Deadline:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: registrationDeadline,\n          onChange: e => setregistrationDeadline(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Tournament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateTournament, \"20sb8PMJe+hbbNgSR3JRWFheEbw=\");\n_c = CreateTournament;\nexport default CreateTournament;\nvar _c;\n$RefreshReg$(_c, \"CreateTournament\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateTournament","_s","name","setname","description","setDescription","registrationDeadline","setregistrationDeadline","oggettoSalvato","JSON","parse","sessionStorage","getItem","creatorId","userId","handleSubmit","e","preventDefault","tournamentData","className","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AleFerro/Desktop/FeraboliFilippiniLucca/Implementation/ckbfrontend/src/Components/CreateTournament/createtournament.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './createtournament.css'; // Importing the CSS file\r\n\r\nconst CreateTournament = () => {\r\n    const [name, setname] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [registrationDeadline, setregistrationDeadline] = useState('');\r\n\r\n    const oggettoSalvato = JSON.parse(sessionStorage.getItem('utente'));\r\n    const creatorId = oggettoSalvato.userId;\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const userId = \"User's ID\"; // Fetch or set the user ID here\r\n        const tournamentData = { name, creatorId, description, registrationDeadline };\r\n\r\n        // Send tournamentData to the backend\r\n        // Example: await fetch('your-backend-endpoint', { method: 'POST', body: JSON.stringify(tournamentData), headers: { 'Content-Type': 'application/json' } });\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-tournament\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Tournament Name:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e) => setname(e.target.value)}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Description:\r\n                    <textarea\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Submission Deadline:\r\n                    <input\r\n                        type=\"date\"\r\n                        value={registrationDeadline}\r\n                        onChange={(e) => setregistrationDeadline(e.target.value)}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Create Tournament</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateTournament;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpE,MAAMW,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;EACnE,MAAMC,SAAS,GAAGL,cAAc,CAACM,MAAM;EACvC,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMH,MAAM,GAAG,WAAW,CAAC,CAAC;IAC5B,MAAMI,cAAc,GAAG;MAAEhB,IAAI;MAAEW,SAAS;MAAET,WAAW;MAAEE;IAAqB,CAAC;;IAE7E;IACA;EACJ,CAAC;EAED,oBACIP,OAAA;IAAKoB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9BrB,OAAA;MAAMsB,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBACzBrB,OAAA;QAAAqB,QAAA,GAAO,kBAEH,eAAArB,OAAA;UACIuB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAErB,IAAK;UACZsB,QAAQ,EAAGR,CAAC,IAAKb,OAAO,CAACa,CAAC,CAACS,MAAM,CAACF,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACR9B,OAAA;QAAAqB,QAAA,GAAO,cAEH,eAAArB,OAAA;UACIwB,KAAK,EAAEnB,WAAY;UACnBoB,QAAQ,EAAGR,CAAC,IAAKX,cAAc,CAACW,CAAC,CAACS,MAAM,CAACF,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACR9B,OAAA;QAAAqB,QAAA,GAAO,sBAEH,eAAArB,OAAA;UACIuB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjB,oBAAqB;UAC5BkB,QAAQ,EAAGR,CAAC,IAAKT,uBAAuB,CAACS,CAAC,CAACS,MAAM,CAACF,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACR9B,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAiB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA9CID,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAgDtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}